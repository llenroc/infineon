using System;
using System.Linq;
using Infineon.Model;

namespace Infineon
{
    public class FirmwareBuilder
    {
        private static byte[] defaultData = new byte[]
        {
            0x02, 0x0f, 0x44, 0x6d, 0x64, 0x03, 0x5c, 0x00, 0x18, 0x40, 0x53, 0x05, 0x96, 0x01, 0x01, 0x28,
            0x01, 0xf6, 0x00, 0x00, 0x15, 0x03, 0x00, 0x53, 0x03, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0xe0,
            0x00, 0x50, 0x50, 0x50, 0x50, 0x80, 0x80, 0x80, 0x80, 0x84, 0x01, 0x1c, 0x2d, 0x55, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
        };

        public static byte[] BuildFirmware( Data data )
        {
            var buffer = new byte[defaultData.Length];
            Array.Copy( defaultData, buffer, defaultData.Length - 1 );  // Don't need last byte

            // TODO

            buffer[buffer.Length - 1] = buffer.Aggregate( ( a, b ) => (byte)(a ^ b) );
            return buffer;
        }
    }
}
